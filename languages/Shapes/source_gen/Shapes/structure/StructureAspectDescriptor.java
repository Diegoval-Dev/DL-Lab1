package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColorReference = createDescriptorForColorReference();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  /*package*/ final ConceptDescriptor myConceptTriangle = createDescriptorForTriangle();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptColor, myConceptColorReference, myConceptShape, myConceptSquare, myConceptTriangle);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.ColorReference:
        return myConceptColorReference;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      case LanguageConceptSwitch.Triangle:
        return myConceptTriangle;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Canvas", 0x1952f8d055204656L, 0xa76337b6f950f125L, 0x6ab6e004fd886aaaL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e0724b04-c2a3-4c55-a825-2434b0ecee7c(Shapes.structure)/7689579725819767466");
    b.version(3);
    b.aggregate("shapes", 0x6ab6e004fd886aadL).target(0x1952f8d055204656L, 0xa76337b6f950f125L, 0x6ab6e004fd886aa0L).optional(true).ordered(true).multiple(true).origin("7689579725819767469").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Circle", 0x1952f8d055204656L, 0xa76337b6f950f125L, 0x6ab6e004fd886aa2L);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0x1952f8d055204656L, 0xa76337b6f950f125L, 0x6ab6e004fd886aa0L);
    b.origin("r:e0724b04-c2a3-4c55-a825-2434b0ecee7c(Shapes.structure)/7689579725819767458");
    b.version(3);
    b.property("x", 0x6ab6e004fd886aa3L).type(PrimitiveTypeId.INTEGER).origin("7689579725819767459").done();
    b.property("y", 0x6ab6e004fd886aa4L).type(PrimitiveTypeId.INTEGER).origin("7689579725819767460").done();
    b.property("radius", 0x6ab6e004fd886aa5L).type(PrimitiveTypeId.INTEGER).origin("7689579725819767461").done();
    b.alias("cicle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Color", 0x1952f8d055204656L, 0xa76337b6f950f125L, 0x1a431ea767375a07L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e0724b04-c2a3-4c55-a825-2434b0ecee7c(Shapes.structure)/1892389972765792775");
    b.version(3);
    b.alias("color");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "ColorReference", 0x1952f8d055204656L, 0xa76337b6f950f125L, 0x7670057879406e17L);
    b.class_(false, false, false);
    b.origin("r:e0724b04-c2a3-4c55-a825-2434b0ecee7c(Shapes.structure)/8534327308855569943");
    b.version(3);
    b.associate("target", 0x7670057879406e19L).target(0x1952f8d055204656L, 0xa76337b6f950f125L, 0x1a431ea767375a07L).optional(false).origin("8534327308855569945").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Shape", 0x1952f8d055204656L, 0xa76337b6f950f125L, 0x6ab6e004fd886aa0L);
    b.class_(false, true, false);
    b.origin("r:e0724b04-c2a3-4c55-a825-2434b0ecee7c(Shapes.structure)/7689579725819767456");
    b.version(3);
    b.aggregate("color", 0x7670057879406e25L).target(0x1952f8d055204656L, 0xa76337b6f950f125L, 0x7670057879406e17L).optional(false).ordered(true).multiple(false).origin("8534327308855569957").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Square", 0x1952f8d055204656L, 0xa76337b6f950f125L, 0x6ab6e004fd886aa6L);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0x1952f8d055204656L, 0xa76337b6f950f125L, 0x6ab6e004fd886aa0L);
    b.origin("r:e0724b04-c2a3-4c55-a825-2434b0ecee7c(Shapes.structure)/7689579725819767462");
    b.version(3);
    b.property("upperLeftX", 0x6ab6e004fd886aa7L).type(PrimitiveTypeId.INTEGER).origin("7689579725819767463").done();
    b.property("upperLeftY", 0x6ab6e004fd886aa8L).type(PrimitiveTypeId.INTEGER).origin("7689579725819767464").done();
    b.property("size", 0x6ab6e004fd886aa9L).type(PrimitiveTypeId.INTEGER).origin("7689579725819767465").done();
    b.alias("square");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTriangle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Triangle", 0x1952f8d055204656L, 0xa76337b6f950f125L, 0x1a431ea7673619efL);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0x1952f8d055204656L, 0xa76337b6f950f125L, 0x6ab6e004fd886aa0L);
    b.origin("r:e0724b04-c2a3-4c55-a825-2434b0ecee7c(Shapes.structure)/1892389972765710831");
    b.version(3);
    b.property("x1", 0x1a431ea767361a00L).type(PrimitiveTypeId.INTEGER).origin("1892389972765710848").done();
    b.property("x2", 0x1a431ea767361a01L).type(PrimitiveTypeId.INTEGER).origin("1892389972765710849").done();
    b.property("y1", 0x1a431ea767361a02L).type(PrimitiveTypeId.INTEGER).origin("1892389972765710850").done();
    b.property("y2", 0x1a431ea767361a03L).type(PrimitiveTypeId.INTEGER).origin("1892389972765710851").done();
    b.property("z1", 0x1a431ea767361a04L).type(PrimitiveTypeId.INTEGER).origin("1892389972765710852").done();
    b.property("z2", 0x1a431ea767361a05L).type(PrimitiveTypeId.INTEGER).origin("1892389972765710853").done();
    b.alias("triangle");
    return b.create();
  }
}
